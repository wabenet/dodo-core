// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.13.0
// source: api/v1alpha1/runtime.proto

package v1alpha1

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateContainerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
}

func (x *CreateContainerResponse) Reset() {
	*x = CreateContainerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_runtime_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerResponse) ProtoMessage() {}

func (x *CreateContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_runtime_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerResponse.ProtoReflect.Descriptor instead.
func (*CreateContainerResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_runtime_proto_rawDescGZIP(), []int{0}
}

func (x *CreateContainerResponse) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type GetImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageSpec string `protobuf:"bytes,1,opt,name=image_spec,json=imageSpec,proto3" json:"image_spec,omitempty"`
}

func (x *GetImageRequest) Reset() {
	*x = GetImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_runtime_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageRequest) ProtoMessage() {}

func (x *GetImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_runtime_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageRequest.ProtoReflect.Descriptor instead.
func (*GetImageRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_runtime_proto_rawDescGZIP(), []int{1}
}

func (x *GetImageRequest) GetImageSpec() string {
	if x != nil {
		return x.ImageSpec
	}
	return ""
}

type CreateContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *Backdrop `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Tty    bool      `protobuf:"varint,2,opt,name=tty,proto3" json:"tty,omitempty"`
	Stdio  bool      `protobuf:"varint,3,opt,name=stdio,proto3" json:"stdio,omitempty"`
}

func (x *CreateContainerRequest) Reset() {
	*x = CreateContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_runtime_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerRequest) ProtoMessage() {}

func (x *CreateContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_runtime_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerRequest.ProtoReflect.Descriptor instead.
func (*CreateContainerRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_runtime_proto_rawDescGZIP(), []int{2}
}

func (x *CreateContainerRequest) GetConfig() *Backdrop {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateContainerRequest) GetTty() bool {
	if x != nil {
		return x.Tty
	}
	return false
}

func (x *CreateContainerRequest) GetStdio() bool {
	if x != nil {
		return x.Stdio
	}
	return false
}

type DeleteContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
}

func (x *DeleteContainerRequest) Reset() {
	*x = DeleteContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_runtime_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContainerRequest) ProtoMessage() {}

func (x *DeleteContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_runtime_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContainerRequest.ProtoReflect.Descriptor instead.
func (*DeleteContainerRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_runtime_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type StartContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
}

func (x *StartContainerRequest) Reset() {
	*x = StartContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_runtime_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartContainerRequest) ProtoMessage() {}

func (x *StartContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_runtime_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartContainerRequest.ProtoReflect.Descriptor instead.
func (*StartContainerRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_runtime_proto_rawDescGZIP(), []int{4}
}

func (x *StartContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type ResizeContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Height      uint32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Width       uint32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *ResizeContainerRequest) Reset() {
	*x = ResizeContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_runtime_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResizeContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizeContainerRequest) ProtoMessage() {}

func (x *ResizeContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_runtime_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizeContainerRequest.ProtoReflect.Descriptor instead.
func (*ResizeContainerRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_runtime_proto_rawDescGZIP(), []int{5}
}

func (x *ResizeContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ResizeContainerRequest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ResizeContainerRequest) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type StreamContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Height      uint32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Width       uint32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *StreamContainerRequest) Reset() {
	*x = StreamContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_runtime_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamContainerRequest) ProtoMessage() {}

func (x *StreamContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_runtime_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamContainerRequest.ProtoReflect.Descriptor instead.
func (*StreamContainerRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_runtime_proto_rawDescGZIP(), []int{6}
}

func (x *StreamContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *StreamContainerRequest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *StreamContainerRequest) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type StreamContainerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExitCode int64  `protobuf:"varint,1,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StreamContainerResponse) Reset() {
	*x = StreamContainerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_runtime_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamContainerResponse) ProtoMessage() {}

func (x *StreamContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_runtime_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamContainerResponse.ProtoReflect.Descriptor instead.
func (*StreamContainerResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_runtime_proto_rawDescGZIP(), []int{7}
}

func (x *StreamContainerResponse) GetExitCode() int64 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *StreamContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageId string `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
}

func (x *GetImageResponse) Reset() {
	*x = GetImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_runtime_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageResponse) ProtoMessage() {}

func (x *GetImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_runtime_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageResponse.ProtoReflect.Descriptor instead.
func (*GetImageResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_runtime_proto_rawDescGZIP(), []int{8}
}

func (x *GetImageResponse) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

var File_api_v1alpha1_runtime_proto protoreflect.FileDescriptor

var file_api_v1alpha1_runtime_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2a, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c,
	0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x62,
	0x61, 0x63, 0x6b, 0x64, 0x72, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3c, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x22, 0x8e, 0x01,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64,
	0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x64, 0x72, 0x6f, 0x70, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x74, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x64, 0x69,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x74, 0x64, 0x69, 0x6f, 0x22, 0x3b,
	0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x15, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x69, 0x7a,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x22, 0x69, 0x0a, 0x16, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22, 0x4f, 0x0a,
	0x17, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x69, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2d,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x32, 0xaf, 0x08,
	0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12,
	0x5f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64,
	0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x9a, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64,
	0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x12, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f,
	0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6b, 0x0a, 0x0e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x41,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f,
	0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x9a, 0x01, 0x0a, 0x0f, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x42, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f,
	0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64,
	0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e,
	0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x85, 0x01, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64,
	0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xaf, 0x01,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64,
	0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f,
	0x64, 0x6f, 0x2d, 0x63, 0x6c, 0x69, 0x2f, 0x64, 0x6f, 0x64, 0x6f, 0x2d, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1alpha1_runtime_proto_rawDescOnce sync.Once
	file_api_v1alpha1_runtime_proto_rawDescData = file_api_v1alpha1_runtime_proto_rawDesc
)

func file_api_v1alpha1_runtime_proto_rawDescGZIP() []byte {
	file_api_v1alpha1_runtime_proto_rawDescOnce.Do(func() {
		file_api_v1alpha1_runtime_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1alpha1_runtime_proto_rawDescData)
	})
	return file_api_v1alpha1_runtime_proto_rawDescData
}

var file_api_v1alpha1_runtime_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_v1alpha1_runtime_proto_goTypes = []interface{}{
	(*CreateContainerResponse)(nil),        // 0: com.github.dodo_cli.dodo_core.api.v1alpha1.CreateContainerResponse
	(*GetImageRequest)(nil),                // 1: com.github.dodo_cli.dodo_core.api.v1alpha1.GetImageRequest
	(*CreateContainerRequest)(nil),         // 2: com.github.dodo_cli.dodo_core.api.v1alpha1.CreateContainerRequest
	(*DeleteContainerRequest)(nil),         // 3: com.github.dodo_cli.dodo_core.api.v1alpha1.DeleteContainerRequest
	(*StartContainerRequest)(nil),          // 4: com.github.dodo_cli.dodo_core.api.v1alpha1.StartContainerRequest
	(*ResizeContainerRequest)(nil),         // 5: com.github.dodo_cli.dodo_core.api.v1alpha1.ResizeContainerRequest
	(*StreamContainerRequest)(nil),         // 6: com.github.dodo_cli.dodo_core.api.v1alpha1.StreamContainerRequest
	(*StreamContainerResponse)(nil),        // 7: com.github.dodo_cli.dodo_core.api.v1alpha1.StreamContainerResponse
	(*GetImageResponse)(nil),               // 8: com.github.dodo_cli.dodo_core.api.v1alpha1.GetImageResponse
	(*Backdrop)(nil),                       // 9: com.github.dodo_cli.dodo_core.api.v1alpha1.Backdrop
	(*empty.Empty)(nil),                    // 10: google.protobuf.Empty
	(*GetStreamingConnectionRequest)(nil),  // 11: com.github.dodo_cli.dodo_core.api.v1alpha1.GetStreamingConnectionRequest
	(*PluginInfo)(nil),                     // 12: com.github.dodo_cli.dodo_core.api.v1alpha1.PluginInfo
	(*GetStreamingConnectionResponse)(nil), // 13: com.github.dodo_cli.dodo_core.api.v1alpha1.GetStreamingConnectionResponse
}
var file_api_v1alpha1_runtime_proto_depIdxs = []int32{
	9,  // 0: com.github.dodo_cli.dodo_core.api.v1alpha1.CreateContainerRequest.config:type_name -> com.github.dodo_cli.dodo_core.api.v1alpha1.Backdrop
	10, // 1: com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin.GetPluginInfo:input_type -> google.protobuf.Empty
	2,  // 2: com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin.CreateContainer:input_type -> com.github.dodo_cli.dodo_core.api.v1alpha1.CreateContainerRequest
	3,  // 3: com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin.DeleteContainer:input_type -> com.github.dodo_cli.dodo_core.api.v1alpha1.DeleteContainerRequest
	4,  // 4: com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin.StartContainer:input_type -> com.github.dodo_cli.dodo_core.api.v1alpha1.StartContainerRequest
	6,  // 5: com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin.StreamContainer:input_type -> com.github.dodo_cli.dodo_core.api.v1alpha1.StreamContainerRequest
	5,  // 6: com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin.ResizeContainer:input_type -> com.github.dodo_cli.dodo_core.api.v1alpha1.ResizeContainerRequest
	1,  // 7: com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin.GetImage:input_type -> com.github.dodo_cli.dodo_core.api.v1alpha1.GetImageRequest
	11, // 8: com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin.GetStreamingConnection:input_type -> com.github.dodo_cli.dodo_core.api.v1alpha1.GetStreamingConnectionRequest
	12, // 9: com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin.GetPluginInfo:output_type -> com.github.dodo_cli.dodo_core.api.v1alpha1.PluginInfo
	0,  // 10: com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin.CreateContainer:output_type -> com.github.dodo_cli.dodo_core.api.v1alpha1.CreateContainerResponse
	10, // 11: com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin.DeleteContainer:output_type -> google.protobuf.Empty
	10, // 12: com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin.StartContainer:output_type -> google.protobuf.Empty
	7,  // 13: com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin.StreamContainer:output_type -> com.github.dodo_cli.dodo_core.api.v1alpha1.StreamContainerResponse
	10, // 14: com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin.ResizeContainer:output_type -> google.protobuf.Empty
	8,  // 15: com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin.GetImage:output_type -> com.github.dodo_cli.dodo_core.api.v1alpha1.GetImageResponse
	13, // 16: com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin.GetStreamingConnection:output_type -> com.github.dodo_cli.dodo_core.api.v1alpha1.GetStreamingConnectionResponse
	9,  // [9:17] is the sub-list for method output_type
	1,  // [1:9] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_api_v1alpha1_runtime_proto_init() }
func file_api_v1alpha1_runtime_proto_init() {
	if File_api_v1alpha1_runtime_proto != nil {
		return
	}
	file_api_v1alpha1_plugin_proto_init()
	file_api_v1alpha1_backdrop_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1alpha1_runtime_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContainerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_runtime_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_runtime_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_runtime_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_runtime_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_runtime_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResizeContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_runtime_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_runtime_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamContainerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_runtime_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1alpha1_runtime_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1alpha1_runtime_proto_goTypes,
		DependencyIndexes: file_api_v1alpha1_runtime_proto_depIdxs,
		MessageInfos:      file_api_v1alpha1_runtime_proto_msgTypes,
	}.Build()
	File_api_v1alpha1_runtime_proto = out.File
	file_api_v1alpha1_runtime_proto_rawDesc = nil
	file_api_v1alpha1_runtime_proto_goTypes = nil
	file_api_v1alpha1_runtime_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RuntimePluginClient is the client API for RuntimePlugin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RuntimePluginClient interface {
	GetPluginInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PluginInfo, error)
	CreateContainer(ctx context.Context, in *CreateContainerRequest, opts ...grpc.CallOption) (*CreateContainerResponse, error)
	DeleteContainer(ctx context.Context, in *DeleteContainerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	StartContainer(ctx context.Context, in *StartContainerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	StreamContainer(ctx context.Context, in *StreamContainerRequest, opts ...grpc.CallOption) (*StreamContainerResponse, error)
	ResizeContainer(ctx context.Context, in *ResizeContainerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetImage(ctx context.Context, in *GetImageRequest, opts ...grpc.CallOption) (*GetImageResponse, error)
	GetStreamingConnection(ctx context.Context, in *GetStreamingConnectionRequest, opts ...grpc.CallOption) (*GetStreamingConnectionResponse, error)
}

type runtimePluginClient struct {
	cc grpc.ClientConnInterface
}

func NewRuntimePluginClient(cc grpc.ClientConnInterface) RuntimePluginClient {
	return &runtimePluginClient{cc}
}

func (c *runtimePluginClient) GetPluginInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PluginInfo, error) {
	out := new(PluginInfo)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin/GetPluginInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimePluginClient) CreateContainer(ctx context.Context, in *CreateContainerRequest, opts ...grpc.CallOption) (*CreateContainerResponse, error) {
	out := new(CreateContainerResponse)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin/CreateContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimePluginClient) DeleteContainer(ctx context.Context, in *DeleteContainerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin/DeleteContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimePluginClient) StartContainer(ctx context.Context, in *StartContainerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin/StartContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimePluginClient) StreamContainer(ctx context.Context, in *StreamContainerRequest, opts ...grpc.CallOption) (*StreamContainerResponse, error) {
	out := new(StreamContainerResponse)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin/StreamContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimePluginClient) ResizeContainer(ctx context.Context, in *ResizeContainerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin/ResizeContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimePluginClient) GetImage(ctx context.Context, in *GetImageRequest, opts ...grpc.CallOption) (*GetImageResponse, error) {
	out := new(GetImageResponse)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin/GetImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimePluginClient) GetStreamingConnection(ctx context.Context, in *GetStreamingConnectionRequest, opts ...grpc.CallOption) (*GetStreamingConnectionResponse, error) {
	out := new(GetStreamingConnectionResponse)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin/GetStreamingConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RuntimePluginServer is the server API for RuntimePlugin service.
type RuntimePluginServer interface {
	GetPluginInfo(context.Context, *empty.Empty) (*PluginInfo, error)
	CreateContainer(context.Context, *CreateContainerRequest) (*CreateContainerResponse, error)
	DeleteContainer(context.Context, *DeleteContainerRequest) (*empty.Empty, error)
	StartContainer(context.Context, *StartContainerRequest) (*empty.Empty, error)
	StreamContainer(context.Context, *StreamContainerRequest) (*StreamContainerResponse, error)
	ResizeContainer(context.Context, *ResizeContainerRequest) (*empty.Empty, error)
	GetImage(context.Context, *GetImageRequest) (*GetImageResponse, error)
	GetStreamingConnection(context.Context, *GetStreamingConnectionRequest) (*GetStreamingConnectionResponse, error)
}

// UnimplementedRuntimePluginServer can be embedded to have forward compatible implementations.
type UnimplementedRuntimePluginServer struct {
}

func (*UnimplementedRuntimePluginServer) GetPluginInfo(context.Context, *empty.Empty) (*PluginInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPluginInfo not implemented")
}
func (*UnimplementedRuntimePluginServer) CreateContainer(context.Context, *CreateContainerRequest) (*CreateContainerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateContainer not implemented")
}
func (*UnimplementedRuntimePluginServer) DeleteContainer(context.Context, *DeleteContainerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteContainer not implemented")
}
func (*UnimplementedRuntimePluginServer) StartContainer(context.Context, *StartContainerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartContainer not implemented")
}
func (*UnimplementedRuntimePluginServer) StreamContainer(context.Context, *StreamContainerRequest) (*StreamContainerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StreamContainer not implemented")
}
func (*UnimplementedRuntimePluginServer) ResizeContainer(context.Context, *ResizeContainerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResizeContainer not implemented")
}
func (*UnimplementedRuntimePluginServer) GetImage(context.Context, *GetImageRequest) (*GetImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetImage not implemented")
}
func (*UnimplementedRuntimePluginServer) GetStreamingConnection(context.Context, *GetStreamingConnectionRequest) (*GetStreamingConnectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStreamingConnection not implemented")
}

func RegisterRuntimePluginServer(s *grpc.Server, srv RuntimePluginServer) {
	s.RegisterService(&_RuntimePlugin_serviceDesc, srv)
}

func _RuntimePlugin_GetPluginInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimePluginServer).GetPluginInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin/GetPluginInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimePluginServer).GetPluginInfo(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimePlugin_CreateContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimePluginServer).CreateContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin/CreateContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimePluginServer).CreateContainer(ctx, req.(*CreateContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimePlugin_DeleteContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimePluginServer).DeleteContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin/DeleteContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimePluginServer).DeleteContainer(ctx, req.(*DeleteContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimePlugin_StartContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimePluginServer).StartContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin/StartContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimePluginServer).StartContainer(ctx, req.(*StartContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimePlugin_StreamContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StreamContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimePluginServer).StreamContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin/StreamContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimePluginServer).StreamContainer(ctx, req.(*StreamContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimePlugin_ResizeContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResizeContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimePluginServer).ResizeContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin/ResizeContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimePluginServer).ResizeContainer(ctx, req.(*ResizeContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimePlugin_GetImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimePluginServer).GetImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin/GetImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimePluginServer).GetImage(ctx, req.(*GetImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimePlugin_GetStreamingConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStreamingConnectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimePluginServer).GetStreamingConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin/GetStreamingConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimePluginServer).GetStreamingConnection(ctx, req.(*GetStreamingConnectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RuntimePlugin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.github.dodo_cli.dodo_core.api.v1alpha1.RuntimePlugin",
	HandlerType: (*RuntimePluginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPluginInfo",
			Handler:    _RuntimePlugin_GetPluginInfo_Handler,
		},
		{
			MethodName: "CreateContainer",
			Handler:    _RuntimePlugin_CreateContainer_Handler,
		},
		{
			MethodName: "DeleteContainer",
			Handler:    _RuntimePlugin_DeleteContainer_Handler,
		},
		{
			MethodName: "StartContainer",
			Handler:    _RuntimePlugin_StartContainer_Handler,
		},
		{
			MethodName: "StreamContainer",
			Handler:    _RuntimePlugin_StreamContainer_Handler,
		},
		{
			MethodName: "ResizeContainer",
			Handler:    _RuntimePlugin_ResizeContainer_Handler,
		},
		{
			MethodName: "GetImage",
			Handler:    _RuntimePlugin_GetImage_Handler,
		},
		{
			MethodName: "GetStreamingConnection",
			Handler:    _RuntimePlugin_GetStreamingConnection_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1alpha1/runtime.proto",
}
