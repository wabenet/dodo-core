// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.2
// source: api/v1alpha2/builder.proto

package v1alpha2

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *BuildInfo `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Height uint32     `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Width  uint32     `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *CreateImageRequest) Reset() {
	*x = CreateImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha2_builder_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageRequest) ProtoMessage() {}

func (x *CreateImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha2_builder_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageRequest.ProtoReflect.Descriptor instead.
func (*CreateImageRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha2_builder_proto_rawDescGZIP(), []int{0}
}

func (x *CreateImageRequest) GetConfig() *BuildInfo {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateImageRequest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CreateImageRequest) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type CreateImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageId string `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
}

func (x *CreateImageResponse) Reset() {
	*x = CreateImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha2_builder_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageResponse) ProtoMessage() {}

func (x *CreateImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha2_builder_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageResponse.ProtoReflect.Descriptor instead.
func (*CreateImageResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha2_builder_proto_rawDescGZIP(), []int{1}
}

func (x *CreateImageResponse) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

var File_api_v1alpha2_builder_proto protoreflect.FileDescriptor

var file_api_v1alpha2_builder_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2a, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c,
	0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x32, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4d, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64,
	0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22, 0x30,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x32, 0xb3, 0x03, 0x0a, 0x0d, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x12, 0x5f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x36, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c,
	0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x8e, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0xaf, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x49, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64,
	0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69,
	0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x64, 0x6f, 0x2d, 0x63, 0x6c, 0x69, 0x2f, 0x64, 0x6f,
	0x64, 0x6f, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1alpha2_builder_proto_rawDescOnce sync.Once
	file_api_v1alpha2_builder_proto_rawDescData = file_api_v1alpha2_builder_proto_rawDesc
)

func file_api_v1alpha2_builder_proto_rawDescGZIP() []byte {
	file_api_v1alpha2_builder_proto_rawDescOnce.Do(func() {
		file_api_v1alpha2_builder_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1alpha2_builder_proto_rawDescData)
	})
	return file_api_v1alpha2_builder_proto_rawDescData
}

var file_api_v1alpha2_builder_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_v1alpha2_builder_proto_goTypes = []interface{}{
	(*CreateImageRequest)(nil),             // 0: com.github.dodo_cli.dodo_core.api.v1alpha2.CreateImageRequest
	(*CreateImageResponse)(nil),            // 1: com.github.dodo_cli.dodo_core.api.v1alpha2.CreateImageResponse
	(*BuildInfo)(nil),                      // 2: com.github.dodo_cli.dodo_core.api.v1alpha2.BuildInfo
	(*empty.Empty)(nil),                    // 3: google.protobuf.Empty
	(*GetStreamingConnectionRequest)(nil),  // 4: com.github.dodo_cli.dodo_core.api.v1alpha2.GetStreamingConnectionRequest
	(*PluginInfo)(nil),                     // 5: com.github.dodo_cli.dodo_core.api.v1alpha2.PluginInfo
	(*GetStreamingConnectionResponse)(nil), // 6: com.github.dodo_cli.dodo_core.api.v1alpha2.GetStreamingConnectionResponse
}
var file_api_v1alpha2_builder_proto_depIdxs = []int32{
	2, // 0: com.github.dodo_cli.dodo_core.api.v1alpha2.CreateImageRequest.config:type_name -> com.github.dodo_cli.dodo_core.api.v1alpha2.BuildInfo
	3, // 1: com.github.dodo_cli.dodo_core.api.v1alpha2.BuilderPlugin.GetPluginInfo:input_type -> google.protobuf.Empty
	0, // 2: com.github.dodo_cli.dodo_core.api.v1alpha2.BuilderPlugin.CreateImage:input_type -> com.github.dodo_cli.dodo_core.api.v1alpha2.CreateImageRequest
	4, // 3: com.github.dodo_cli.dodo_core.api.v1alpha2.BuilderPlugin.GetStreamingConnection:input_type -> com.github.dodo_cli.dodo_core.api.v1alpha2.GetStreamingConnectionRequest
	5, // 4: com.github.dodo_cli.dodo_core.api.v1alpha2.BuilderPlugin.GetPluginInfo:output_type -> com.github.dodo_cli.dodo_core.api.v1alpha2.PluginInfo
	1, // 5: com.github.dodo_cli.dodo_core.api.v1alpha2.BuilderPlugin.CreateImage:output_type -> com.github.dodo_cli.dodo_core.api.v1alpha2.CreateImageResponse
	6, // 6: com.github.dodo_cli.dodo_core.api.v1alpha2.BuilderPlugin.GetStreamingConnection:output_type -> com.github.dodo_cli.dodo_core.api.v1alpha2.GetStreamingConnectionResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_v1alpha2_builder_proto_init() }
func file_api_v1alpha2_builder_proto_init() {
	if File_api_v1alpha2_builder_proto != nil {
		return
	}
	file_api_v1alpha2_plugin_proto_init()
	file_api_v1alpha2_build_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1alpha2_builder_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha2_builder_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1alpha2_builder_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1alpha2_builder_proto_goTypes,
		DependencyIndexes: file_api_v1alpha2_builder_proto_depIdxs,
		MessageInfos:      file_api_v1alpha2_builder_proto_msgTypes,
	}.Build()
	File_api_v1alpha2_builder_proto = out.File
	file_api_v1alpha2_builder_proto_rawDesc = nil
	file_api_v1alpha2_builder_proto_goTypes = nil
	file_api_v1alpha2_builder_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BuilderPluginClient is the client API for BuilderPlugin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BuilderPluginClient interface {
	GetPluginInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PluginInfo, error)
	CreateImage(ctx context.Context, in *CreateImageRequest, opts ...grpc.CallOption) (*CreateImageResponse, error)
	GetStreamingConnection(ctx context.Context, in *GetStreamingConnectionRequest, opts ...grpc.CallOption) (*GetStreamingConnectionResponse, error)
}

type builderPluginClient struct {
	cc grpc.ClientConnInterface
}

func NewBuilderPluginClient(cc grpc.ClientConnInterface) BuilderPluginClient {
	return &builderPluginClient{cc}
}

func (c *builderPluginClient) GetPluginInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PluginInfo, error) {
	out := new(PluginInfo)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_core.api.v1alpha2.BuilderPlugin/GetPluginInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *builderPluginClient) CreateImage(ctx context.Context, in *CreateImageRequest, opts ...grpc.CallOption) (*CreateImageResponse, error) {
	out := new(CreateImageResponse)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_core.api.v1alpha2.BuilderPlugin/CreateImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *builderPluginClient) GetStreamingConnection(ctx context.Context, in *GetStreamingConnectionRequest, opts ...grpc.CallOption) (*GetStreamingConnectionResponse, error) {
	out := new(GetStreamingConnectionResponse)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_core.api.v1alpha2.BuilderPlugin/GetStreamingConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BuilderPluginServer is the server API for BuilderPlugin service.
type BuilderPluginServer interface {
	GetPluginInfo(context.Context, *empty.Empty) (*PluginInfo, error)
	CreateImage(context.Context, *CreateImageRequest) (*CreateImageResponse, error)
	GetStreamingConnection(context.Context, *GetStreamingConnectionRequest) (*GetStreamingConnectionResponse, error)
}

// UnimplementedBuilderPluginServer can be embedded to have forward compatible implementations.
type UnimplementedBuilderPluginServer struct {
}

func (*UnimplementedBuilderPluginServer) GetPluginInfo(context.Context, *empty.Empty) (*PluginInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPluginInfo not implemented")
}
func (*UnimplementedBuilderPluginServer) CreateImage(context.Context, *CreateImageRequest) (*CreateImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateImage not implemented")
}
func (*UnimplementedBuilderPluginServer) GetStreamingConnection(context.Context, *GetStreamingConnectionRequest) (*GetStreamingConnectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStreamingConnection not implemented")
}

func RegisterBuilderPluginServer(s *grpc.Server, srv BuilderPluginServer) {
	s.RegisterService(&_BuilderPlugin_serviceDesc, srv)
}

func _BuilderPlugin_GetPluginInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuilderPluginServer).GetPluginInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_core.api.v1alpha2.BuilderPlugin/GetPluginInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuilderPluginServer).GetPluginInfo(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuilderPlugin_CreateImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuilderPluginServer).CreateImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_core.api.v1alpha2.BuilderPlugin/CreateImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuilderPluginServer).CreateImage(ctx, req.(*CreateImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuilderPlugin_GetStreamingConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStreamingConnectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuilderPluginServer).GetStreamingConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_core.api.v1alpha2.BuilderPlugin/GetStreamingConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuilderPluginServer).GetStreamingConnection(ctx, req.(*GetStreamingConnectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BuilderPlugin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.github.dodo_cli.dodo_core.api.v1alpha2.BuilderPlugin",
	HandlerType: (*BuilderPluginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPluginInfo",
			Handler:    _BuilderPlugin_GetPluginInfo_Handler,
		},
		{
			MethodName: "CreateImage",
			Handler:    _BuilderPlugin_CreateImage_Handler,
		},
		{
			MethodName: "GetStreamingConnection",
			Handler:    _BuilderPlugin_GetStreamingConnection_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1alpha2/builder.proto",
}
